# Azure Governance Visualizer v6_major_20230717_1
# Documentation: https://github.com/JulianHayward/Azure-MG-Sub-Governance-Reporting

trigger: none

pr: none

parameters:
  # Resource Types to be excluded from processing analysis for diagnostic settings capability
  - name: ExcludedResourceTypesDiagnosticsCapableParameters
    type: object
    # example:
    #   default:
    #     - microsoft.web/certificates
    #     - Microsoft.VirtualMachineImages/imageTemplates
    default:
      - microsoft.web/certificates
      - microsoft.chaos/chaosexperiments

  # Processes only Subscriptions that startWith the given QuotaIds
  - name: SubscriptionQuotaIdWhitelistParameters
    type: object
    # example:
    #   default:
    #     - MSDN_
    #     - EnterpriseAgreement_
    default:
      - undefined

    # Subscription Tag names for Storage Account Access Analysis
  - name: StorageAccountAccessAnalysisSubscriptionTagsParameters
    type: object
    # example:
    #   default:
    #     - Responsible
    #     - <TagName>
    default:
      - undefined

    # Storage Account Tag names for Storage Account Access Analysis
  - name: StorageAccountAccessAnalysisStorageAccountTagsParameters
    type: object
    # example:
    #   default:
    #     - SAOwner
    #     - <TagName>
    default:
      - undefined

variables:
#  - template: deployAzGovViz.variables.yml
  - group: azgovviz-vars
  - name: ServiceConnection
    value: $[variables.AZGOVVIZ_APP_NAME]
  - name: ManagementGroupId
    value: $[variables.MANAGEMENT_GROUP_ID]
# WebApp publish
  - name: WebAppPublish
    # Switch | example: value: true
    value: true
  - name: WebAppSubscriptionId
    # String | example: value: "<Subscription-Id of the WebApp>"
    value: $[variables.SUBSCRIPTION_ID]
  - name: WebAppResourceGroup
    # String | example: value: "<ResourceGroup name of the WebApp>"
    value: $[variables.RESOURCE_GROUP_NAME]
  - name: WebAppName
    # String | example: value: "<Name of the WebApp>"
    value: $[variables.WEB_APP_NAME]

### Default Variables - Modify as Needed

  # If you integrate Azure Governance Visualizer into an existing repository you may need to adjust the script directory
  - name: ScriptDir
    #example: YourFolder/pwsh
    value: pwsh

  - name: Script
    value: AzGovVizParallel.ps1

  - name: ScriptPrerequisites
    value: prerequisites.ps1

  ## <--- AzAPICall parameters
  ## Consult the AzAPICall GitHub repository for details aka.ms/AzAPICall

  # Enable Debug output
  - name: DebugAzAPICall
    # Switch | example: value: true
    value:

  # Skip the AzAPICall Subscription Validation (only use in case you do not have any valid (quotaId != AAD_* & state != disabled) subscriptions in your tenant)
  - name: AzAPICallSkipAzContextSubscriptionValidation
    # Switch | example: value: true
    value:

  # Define the Subscription Id to use for AzContext (default is to use a random Subscription Id)
  - name: SubscriptionId4AzContext
    # String | example: value: "<your-Subscription-Id>"
    value:

  # Define the Tenant Id to use for AzContext (default is to use the Tenant Id from the current context)
  - name: TenantId4AzContext
    # String | example: value: "<your-Tenant-Id>"
    value:

  ## AzAPICall parameters --->

  # The world is split into two kind of delimiters - comma and semicolon - choose yours
  - name: CsvDelimiter
    # String | default = ';' | example: value: ';'
    value: ';'

  # Specifies the path to output the results from Azure Governance Visualizer
  - name: OutputPath
    # String | example: value: 'wiki'
    value: 'wiki'

### Optional Variables - Modify as Needed

  # Defines the limit (default=500) of AAD Group members; For AAD Groups that have more members than the defined limit Group members will not be resolved
  - name: AADGroupMembersLimit
    # Integer | default = 500 | example: value: 333
    value:

  # Define warning period for Service Principal secret and certificate expiry
  - name: AADServicePrincipalExpiryWarningDays
    # Integer | default = 14 | example: value: 21
    value:

  # Define the direction the Hierarchy should be built in Azure DevOps WikiAsCode (Markdown) TD = TopDown (Horizontal), LR = LeftRight (Vertical)
  - name: AzureDevOpsWikiHierarchyDirection
    # String | default = 'TD' | example: value: 'LR'
    value:

  # Tracks newly created and updated custom Policy, PolicySet and RBAC Role definitions, Policy/RBAC Role assignments and Resources that occurred within the last 14 days (default)
  - name: ChangeTrackingDays
    # Integer | default = 14 | example: value: 21
    value:

  # Define if Azure Consumption data should be reported
  - name: DoAzureConsumption
    # Switch | example: value: true
    value: true

  # If DoAzureConsumption == true then you may define for which time period (days) Azure Consumption data should be gathered
  - name: AzureConsumptionPeriod
    # Integer | default = 1 | example: value: 7
    value: 14

  # Do not include Role assignments on ResourceGroups and Resources
  - name: DoNotIncludeResourceGroupsAndResourcesOnRBAC
    # Switch | example: value: true
    value:

  # Do not include Policy assignments on ResourceGroups
  - name: DoNotIncludeResourceGroupsOnPolicy
    # Switch | example: value: true
    value:

  # Scrub user information
  - name: DoNotShowRoleAssignmentsUserData
    # Switch | example: value: true
    value:

  # Log the console output
  - name: DoTranscript
    # Switch | example: value: true
    value:

  # Time format for the output files (See PowerShell Get-Date help for details on formatting.)
  - name: FileTimeStampFormat
    # String | default = 'yyyyMMdd_HHmmss' | example: value: 'yyyy-MM-dd_HH:mm:ss'
    value:

  # Only creates the Hierarchy Tree
  - name: HierarchyMapOnly
    # Switch | example: value: true
    value:

  # Although the parameter -LargeTenant was introduced recently, still the html output may become too large to be processed properly. The new parameter defines the limit of rows - if for the html processing part the limit is reached then the html table will not be created (csv and json output will still be created). Default rows limit is 20.000
  - name: HtmlTableRowsLimit
    # Integer | default = 20000 | example: value: 30300
    value:

  # JSON Export will not include ResourceGroups (Policy & Role assignments)
  - name: JsonExportExcludeResourceGroups
    # Switch | example: value: true
    value:

  # JSON Export will not include Resources (Role assignments)
  - name: JsonExportExcludeResources
    # Switch | example: value: true
    value:

  # A large tenant is a tenant with more than ~500 Subscriptions - the HTML output for large tenants simply becomes too big. If the parameter switch is true then the following parameters will be set: -PolicyAtScopeOnly $true, -RBACAtScopeOnly $true, -NoResourceProvidersDetailed $true, -NoScopeInsights $true
  - name: LargeTenant
    # Switch | example: value: true
    value:

  # Marks capabilities that approach limits e.g. limit 100, usage 80 will mark with warning
  - name: LimitCriticalPercentage
    # Integer | default = 80 | example: value: 90
    value:

  # Collect data only for Management Groups (Subscription data such as e.g. Policy assignments etc. will not be collected)
  - name: ManagementGroupsOnly
    # Switch | example: value: true
    value:

  # Will not resolve Microsoft Entra ID (AAD) Group memberships for Role assignments where identity type is 'Group'
  - name: NoAADGroupsResolveMembers
    # Switch | example: value: true
    value:

  # Azure Consumption data will not be exported (CSV)
  - name: NoAzureConsumptionReportExportToCSV
    # Switch | example: value: true
    value:

  # Do not export enriched 'Role assignments' data, enriched 'Policy assignments' data and 'all resources' (subscriptionId, resourceType, id, name, location, tags, createdTime, changedTime)
  - name: NoCsvExport
    # Switch | example: value: true
    value:

  # Do not export of ManagementGroup Hierarchy including all MG/Sub Policy/RBAC definitions, Policy/RBAC assignments and some more relevant information to JSON
  - name: NoJsonExport
    # Switch | example: value: true
    value:

  # Disables Microsoft Defender for Cloud Secure Score request for Subscriptions and Management Groups
  - name: NoMDfCSecureScore
    # Switch | example: value: true
    value:

  # Will not query policy compliance states
  - name: NoPolicyComplianceStates
    # Switch | example: value: true
    value:

  # Will not create Resource Diagnostics Policy Lifecycle recommendations
  - name: NoResourceDiagnosticsPolicyLifecycle
    value:

  # Disables 'ResourceProvider Detailed' output for TenantSummary (compute intensive)
  - name: NoResourceProvidersDetailed
    # Switch | example: value: true
    value:

  # Will speed up the processing time but information like Resource diagnostics capability, resource type stats, UserAssigned Identities assigned to Resources is excluded (featured for large tenants)
  - name: NoResources
    # Switch | example: value: true
    value:

  # In larger tenants the ScopeInsights section blows up the html file (up to unusable due to html file size). To further reduce the output use parameter -LargeTenant
  - name: NoScopeInsights
    # Switch | example: value: true
    value:

  # Single Scope Insights output per Subscription should not be created
  - name: NoSingleSubscriptionOutput
    # Switch | example: value: true
    value:

  # Removing 'inherited' lines in the HTML file for 'Policy Assignments'; use this parameter if you run against a larger tenants
  - name: PolicyAtScopeOnly
    # Switch | example: value: true
    value:

  # Removing 'inherited' lines in the HTML file for 'Role Assignments'; use this parameter if you run against a larger tenants
  - name: RBACAtScopeOnly
    # Switch | example: value: true
    value:

  # Will opt-out sending stats
  - name: StatsOptOut
    # Switch | example: value: true
    value:

  # Define the number of script blocks running in parallel. Leveraging PowerShell Core´s parallel capability you can define the ThrottleLimit (default=5)
  - name: ThrottleLimit
    # Integer | Default = 10 | example: value: 11
    value:

  # Will show memory usage
  - name: ShowMemoryUsage
    # Switch | example: value: true
    value:

# Execute PSRule
  - name: DoPSRule
    # Switch | example: value: true
    value:

# Do not report on PIM (Privileged Identity Management) Eligible Role assignments
  - name: NoPIMEligibility
    # Switch | example: value: true
    value:

# Ignore the current scope (ManagementGrouId) and get all PIM (Privileged Identity Management) eligible Role assignments
  - name: PIMEligibilityIgnoreScope
    # Switch | example: value: true
    value:

# Prevent integration of PIM eligible assignments with RoleAssignmentsAll (HTML, CSV)
  - name: NoPIMEligibilityIntegrationRoleAssignmentsAll
    # Switch | example: value: true
    value:

# Do not execute Azure Landing Zones (ALZ) Policy Version Checker
  - name: noALZPolicyVersionChecker
    # Switch | example: value: true
    value:

# Create a dedicated DefinitionInsights HTML file
  - name: NoDefinitionInsightsDedicatedHTML
    # Switch | example: value: true
    value:

# Do not execute Storage Account Access Analysis
  - name: NoStorageAccountAccessAnalysis
    # Switch | example: value: true
    value:

# Do not execute Network analysis / Virtual Network and Virtual Network Peerings
  - name: NoNetwork
    # Switch | example: value: true
    value:

# Dynamic Variables - Do Not Modify Anything Below this line!
  - name: ExcludedResourceTypesDiagnosticsCapable
    value: ${{ join(',',parameters.ExcludedResourceTypesDiagnosticsCapableParameters) }}

  - name: SubscriptionQuotaIdWhitelist
    value: ${{ join(',',parameters.SubscriptionQuotaIdWhitelistParameters) }}

  - name: StorageAccountAccessAnalysisSubscriptionTags
    value: ${{ join(',',parameters.StorageAccountAccessAnalysisSubscriptionTagsParameters) }}

  - name: StorageAccountAccessAnalysisStorageAccountTags
    value: ${{ join(',',parameters.StorageAccountAccessAnalysisStorageAccountTagsParameters) }}

schedules:
- cron: "0 0,12 * * *"
  displayName: every 12h
  always: true
  branches:
    include:
    - main #CHECK branch 'master' is applicable? - delete me :)

#Running AzOps? Run Azure Governance Visualizer after 'AzOps - Push' ..
#AzOps Accellerator https://github.com/Azure/AzOps-Accelerator
#resources:
#  pipelines:
#    - pipeline: 'Push'
#      source: 'AzOps - Push'
#      trigger:
#        branches:
#          include:
#            - master #CHECK branch 'master' is applicable? - delete me :)

jobs:
- job: AzureGovernanceVisualizer
  timeoutInMinutes: 0

  pool:
    vmImage: 'ubuntu-22.04'

  steps:
  - checkout: self
    fetchDepth: 1

  - pwsh: |
      Write-Host 'Build Script Arguments String...'

      $argumentsString = ''
      ls
      $scriptPath = '$(System.DefaultWorkingDirectory)/$(ScriptDir)/$(Script)'

      $astTokens = $null
      $astErrors = $null
      $ast = [System.Management.Automation.Language.Parser]::ParseFile($scriptPath, [ref]$astTokens, [ref]$astErrors)

      $scriptParameters = $ast.FindAll( { $args[0] -is [System.Management.Automation.Language.ParameterAst] }, $false)

      foreach ($scriptParameter in $scriptParameters) {
        $scriptParameterName = $scriptParameter.Name.VariablePath.UserPath
        if ($scriptParameterName -ne 'ScriptDir' -and $scriptParameterName -ne 'Script') {
          $argument = Get-ChildItem -Path "Env:$( $scriptParameterName.ToUpper() )" -ErrorAction SilentlyContinue
          if ($argument.value) {
            if ($scriptParameterName -eq 'ManagementGroupId') {
              if ($argument.Value -match ' ') {
                Write-Host "##vso[task.logissue type=error]Management Group ID ($($argument.Value)) validation failed! Management Group ID may not contain spaces - provide the Management Group ID, not the displayName"
                exit 1
              }
            }
            if ($scriptParameter.StaticType.Name -eq 'SwitchParameter') {
              if ($argument.Value -eq 'True') {
                if ($scriptParameterName -eq 'WebAppPublish') {
                  #skipping
                }
                else {
                  $argumentsString += "-$( $scriptParameterName ) "
                }
              }
            } else {
              if ($scriptParameterName -eq 'CsvDelimiter') {
                $argumentsString += "-$( $scriptParameterName ) '$( $argument.Value )' "
              }
              elseif ($scriptParameterName -eq 'WebAppSubscriptionId' -or $scriptParameterName -eq 'WebAppResourceGroup' -or $scriptParameterName -eq 'WebAppName') {
                #skipping
              }
              else{
                $argumentsString += "-$( $scriptParameterName ) $( $argument.Value ) "
              }
            }
            if ($scriptParameterName -eq 'outputPath') {
              $outputPath = "$( $argument.Value )"
            }
            if ($scriptParameterName -eq 'NoDefinitionInsightsDedicatedHTML') {
              $NoDefinitionInsightsDedicatedHTML = "$( $argument.Value )"
            }
          }
        }
      }

      Write-Host "Arguments String: $( $argumentsString.Trim() )"
      Write-Host "##vso[task.setvariable variable=ScriptArguments]$( $argumentsString.Trim() )"
    displayName: 'Create Arguments String Variable'

  - task: PowerShell@2
    inputs:
      pwsh: true
      targetType: 'filePath'
      filePath: $(System.DefaultWorkingDirectory)/$(ScriptDir)/$(ScriptPrerequisites)
      arguments: '-OutputPath $(OutputPath)'
    displayName: 'Prerequisites check'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)

  - task: AzurePowerShell@5
    inputs:
      azureSubscription: '$(ServiceConnection)'
      scriptType: filePath
      pwsh: true
      scriptPath: '$(System.DefaultWorkingDirectory)/$(ScriptDir)/$(Script)'
      scriptArguments: $(ScriptArguments) -ScriptPath $(ScriptDir)
      azurePowerShellVersion: latestVersion
    displayName: 'Run Azure Governance Visualizer'

  - pwsh: |
      write-host "#################################"
      write-host "Push Azure Governance Visualizer output to repository"
      write-host "#################################"
      $executionDateTimeInternationalReadable = get-date -format "dd-MMM-yyyy HH:mm:ss"
      $currentTimeZone = (Get-TimeZone).Id
      git config --global user.email "AzureGovernanceVisualizerPipeline@azdo.com"
      $PipelineInfo = "Pipeline: '$(Build.DefinitionName)' 'rev $(Build.BuildNumber)' (Project: $([uri]::EscapeDataString("$(System.TeamProject)")); Repository: $(Build.Repository.Name); Branch: $(Build.SourceBranchName) Commit: $(Build.SourceVersion))"
      git config --global user.name "$PipelineInfo"
      git config pull.rebase false
      git add --all
      git commit -m "wiki $executionDateTimeInternationalReadable ($currentTimeZone)"
      git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push origin HEAD:$(Build.SourceBranchName)
    displayName: 'Push Azure Governance Visualizer output to repository'

  - task: AzurePowerShell@5
    condition: and(succeeded(), eq(variables['WebAppPublish'], 'true'))
    inputs:
      azureSubscription: '$(ServiceConnection)'
      ScriptType: 'InlineScript'
      pwsh: true
      Inline: |
        $azAPICallConf = initAzAPICall -DebugAZAPICall $true
        $currentTask = "AzAPICall - Check if WebApp ($($env:WEBAPPNAME)) has Authentication enabled"
        $uri = "$($azAPICallConf['azAPIEndpointUrls'].ARM)/subscriptions/$($env:WEBAPPSUBSCRIPTIONID)/resourceGroups/$($env:WEBAPPRESOURCEGROUP)/providers/Microsoft.Web/sites/$($env:WEBAPPNAME)/config/authsettings/list?api-version=2021-02-01"
        $method = 'POST'
        $request = AzAPICall -AzAPICallConfiguration $azAPICallConf -uri $uri -method $method -currentTask $currentTask -listenOn 'Content'

        $authStatus = $request.properties.enabled
        Write-Host "WebApp ($($env:WEBAPPNAME)) has Authentication enabled: $authStatus"
        if ($authStatus) {
            try {
                Write-Host "NoDefinitionInsightsDedicatedHTML = $($env:NODEFINITIONINSIGHTSDEDICATEDHTML)"
                if ($($env:NODEFINITIONINSIGHTSDEDICATEDHTML)) {
                  try{
                    Compress-Archive -Path "$($env:SYSTEM_DEFAULTWORKINGDIRECTORY)/$($env:OUTPUTPATH)/AzGovViz_$($env:MANAGEMENTGROUPID).html" -DestinationPath "$($env:SYSTEM_DEFAULTWORKINGDIRECTORY)/$($env:OUTPUTPATH)/AzGovViz_$($env:MANAGEMENTGROUPID).zip" -ErrorAction Stop
                  }
                  catch {
                    throw 'Make sure that the ManagementGroupId variable in the AzGovViz.variables.yml has correct casing (Linux!=linuX)'
                  }
                }
                else {
                  try {
                    Compress-Archive -Path "$($env:SYSTEM_DEFAULTWORKINGDIRECTORY)/$($env:OUTPUTPATH)/AzGovViz_$($env:MANAGEMENTGROUPID).html", "$($env:SYSTEM_DEFAULTWORKINGDIRECTORY)/$($env:OUTPUTPATH)/AzGovViz_$($env:MANAGEMENTGROUPID)_DefinitionInsights.html" -DestinationPath "$($env:SYSTEM_DEFAULTWORKINGDIRECTORY)/$($env:OUTPUTPATH)/AzGovViz_$($env:MANAGEMENTGROUPID).zip" -ErrorAction Stop
                  }
                  catch {
                    throw 'Make sure that the ManagementGroupId variable in the AzGovViz.variables.yml has correct casing (Linux!=linuX)'
                  }
                }

                $null = Select-AzSubscription -SubscriptionId $($env:WEBAPPSUBSCRIPTIONID)
                if (Publish-AzWebApp -ResourceGroupName $($env:WEBAPPRESOURCEGROUP) -Name $($env:WEBAPPNAME) -ArchivePath "$($env:SYSTEM_DEFAULTWORKINGDIRECTORY)/$($env:OUTPUTPATH)/AzGovViz_$($env:MANAGEMENTGROUPID).zip" -Force) {
                    if ($($env:NODEFINITIONINSIGHTSDEDICATEDHTML)) {
                        Write-Host "Published AzGovViz_$($env:MANAGEMENTGROUPID).html"
                    }
                    else {
                        Write-Host "Published AzGovViz_$($env:MANAGEMENTGROUPID).html and AzGovViz_$($env:MANAGEMENTGROUPID)_DefinitionInsights.html"
                    }
                    Write-Host "Available URL to access the HTML: https://$((Get-AzWebApp -ResourceGroupName $($env:WEBAPPRESOURCEGROUP) -Name $($env:WEBAPPNAME)).DefaultHostName)"
                }
            }
            catch {
                $_
                Write-Host "HTML NOT published"
                Write-Host "RBAC Role 'Website Contributor' is required"
                exit 1
            }
        }
        else {
            Write-Host "Assuming and insisting that you do not want to publish your tenant insights to the public"
            Write-Host "HTML NOT published. Please configure authentication on the webApp ($($env:WEBAPPNAME))"
            exit 1
        }
      azurePowerShellVersion: latestVersion
    displayName: 'Publish HTML to WebApp'
